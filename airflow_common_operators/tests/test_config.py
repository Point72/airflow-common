from airflow_config import DAG, load_config


class TestConfig:
    def test_cleanup_task(self):
        conf = load_config("config", "config")
        d = DAG(dag_id="test_cleanup", config=conf)
        assert len(d.tasks) == 1

    def test_cleanup_render(self):
        conf = load_config("config", "config")
        assert (
            conf.dags["test_cleanup"].render()
            == """# Generated by airflow-config
from airflow.models import DAG
from airflow.models.param import Param
from airflow_common_operators.tasks.dag_clean import create_cleanup_dag_runs

with DAG(
    schedule="0 0 * * *",
    max_active_tasks=1,
    params={
        "delete_successful": Param(default=True, description=None, schema={"type": ["null", "boolean"], "title": "Delete Successful"}),
        "delete_failed": Param(default=True, description=None, schema={"type": ["null", "boolean"], "title": "Delete Failed"}),
        "mark_failed_as_successful": Param(
            default=False, description=None, schema={"type": ["null", "boolean"], "title": "Mark Failed As Successful"}
        ),
        "max_dagruns": Param(default=10, description=None, schema={"type": ["null", "integer"], "title": "Max Dagruns"}),
        "days_to_keep": Param(default=10, description=None, schema={"type": ["null", "integer"], "title": "Days To Keep"}),
    },
    dag_id="test_cleanup",
) as dag:
    cleanup_task = create_cleanup_dag_runs(task_id="cleanup_task", dag=dag)
"""
        )
